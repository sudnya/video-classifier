
# CUDA Knobs

## Allow use of CUDA-accelerated sparse matrix operations
CudaBlockSparseMatrix::Enable=0
CudaBlockSparseMatrix::UseCudaRandomLibrary=1

## Allow use of CUDA-accelerated dense matrix operations
CublasMatrix::Enable=0

## Use blocking kernel launches
CudaSparseMatrixLibrary::UseBlockingKernelLaunches=0

# Classifer Knobs

## Slice out tiles of the input images to train on (rather than downsampling)
ClassifierEngine::SliceInputImagesToFitNetwork=0
ClassifierEngine::SliceOutCenterTileOnly=0

## How many layers to train simultaneously using an autoencoder
UnsupervisedLearnerEngine::LayersPerIteration=1

## How many layers to train simultaneously using supervised learning
LearnerEngine::LayersPerIteration=1

## Image Batch Size
InputDataProducer::ImageBatchSize=100

# Optimizer Knobs

## Determine the algorithm for general differentiable optimization (LBFGSSolver, GradientDescentSolver)
GeneralDifferentiableSolver::Type=LBFGSSolver
LBFGSSolver::MaxIterations=50000

## Determine the line search algorithm
LineSearch::Default=BacktrackingLineSearch

# Neural Network Knobs

## Randoms
NeuralNetwork::SeedWithTime=1

## Visualization
NeuronVisualizer::InputRange=0.01

### (Differentiable, Nondifferentiable, Analytical)
NeuronVisualizer::SolverClass=Differentiable
NeuronVisualizer::SolverType=LBFGSSolver

## Back prop
#BackPropagation::ForceType=DenseBackPropagation

## Set the parameters for sparse back prop
NeuralNetwork::Lambda=0.0
NeuralNetwork::Sparsity=0.03
NeuralNetwork::SparsityWeight=3.0



